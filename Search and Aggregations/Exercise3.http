# Configure the Zen Discovery module of each node so that they can 
#    communicate
# Zen discovery 
# Zen discovery uses a list of seed nodes in order to start off the discovery process. 
discovery.seed_hosts: ["127.0.0.1"]

# Check that the replicas of indices `hamlet-1` and `hamlet-2` have 
#    been allocated 
# Check the distribution of primary shards and replicas of indices
#    `hamlet-1` and `hamlet-2` across the nodes of the cluster

GET _cat/shards/hamlet* 

# "shard allocation filtering" : doc 

# Configure `hamlet-1` to allocate both primary shards to `node2`, 
#    using the node name

PUT hamlet-1/_settings
{
  "index.routing.allocation.include._name" :  "node2"
} 


# Verify the success of the last action by using the _cat API
GET _cat/shards/hamlet1

# Configure `hamlet-2` so that no primary shard is allocated to 
#    `node3`

PUT hamlet-2/_settings
{
  "index.routing.allocation.exlude._name" :  "node3"
} 


# Verify the success of the last action by using the _cat API
GET _cat/shards/hamlet2

# Remove any allocation filter setting associated with `hamlet-1` 
#    and `hamlet-2`


PUT hamlet-2/_settings
{
  "index.routing.allocation.exlude._name" :  ""
} 


PUT hamlet-1/_settings
{
  "index.routing.allocation.include._name" :  ""
} 

 shard allocation awareness  Doc. 

# Let's assume that we deployed the `eoc-06-cluster` cluster across
#    two availability zones, named `earth` and `mars`. Add the
#    attribute `AZ` to the nodes configuration, and set its value
#    to "earth" for `node1` and `node2`, and to "mars" for `node3`


# in the elasticsearch.yml file on all master-eligible nodes 

cluster.routing.allocation.awareness.attributes: 'AZ'

node.attr.AZ= earth

node.attr.AZ= mars

# Configure the cluster to force shard allocation awareness based on 
#    the two availability zones, and persist such configuration
#    across cluster restarts

cluster.routing.allocation.awareness.force.AZ.values: earth,mars 
cluster.routing.allocation.awareness.attributes: AZ